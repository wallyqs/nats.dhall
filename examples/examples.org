# -*- mode: org; mode: auto-fill -*- 
#+TODO:     ONIT HOLD PAUSED TODO | DONE CANCELED
#+TITLE:    nats.dhall examples
#+property: :header-args: :results output code :mkdirp true

* Basic NATS Cluster with 3 nodes on K8S

Basic example of creating a 3-node NATS cluster.

#+BEGIN_SRC dhall :tangle k8s-cluster.dhall :results output code
let NATS = env:NATS_PRELUDE ? https://wallyqs.github.io/nats.dhall/k8s/package.dhall

let cluster =
      NATS.Server.Cluster::{
      , name = "my-nats"
      , namespace = "default"
      , image = "nats:latest"
      , size = 3
      }

let natsk8s = NATS.K8S.toK8S cluster

in  NATS.K8S.toList natsk8s
#+END_SRC

#+BEGIN_SRC yaml
apiVersion: v1
items:
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app: my-nats
      name: my-nats
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: my-nats
      serviceName: my-nats
      template:
        metadata:
          labels:
            app: my-nats
          name: my-nats
        spec:
          containers:
            - command:
                - /nats-server
                - "-c"
                - /etc/nats/nats.conf
              image: nats:latest
              name: nats
              ports:
                - containerPort: 4222
                  name: my-nats
              volumeMounts:
                - mountPath: /etc/nats
                  name: config-volume
          volumes:
            - configMap:
                name: my-nats-config
              name: config-volume
  - apiVersion: v1
    data:
      nats.conf: |
        port = 4222
        http = 8222
        
        cluster {
          port = 6222
        
          routes = [
        
            nats://my-nats-0.my-nats.default.svc:6222
            nats://my-nats-1.my-nats.default.svc:6222
            nats://my-nats-2.my-nats.default.svc:6222
          ]
        }
    kind: ConfigMap
    metadata:
      labels:
        app: my-nats
      name: my-nats-config
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: my-nats
      name: my-nats
    spec:
      clusterIP: None
      ports:
        - name: client
          port: 4222
          targetPort: 4222
      selector:
        app: my-nats
kind: List
#+END_SRC



